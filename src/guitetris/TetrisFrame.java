/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guitetris;

import java.awt.event.KeyEvent;
import java.util.Date;
import javax.swing.Timer;
import java.util.TimerTask;
import javax.swing.JTextField;
/**
 *
 * @author Ignacio Justicia Ramos
 */
public class TetrisFrame extends javax.swing.JFrame {

    boolean aux = false;
    private Rejilla rejilla;
    private Figura figura;
    private Mueve mueve;
    private long tiempo;
    private Timer timer;

    /**
     * Creates new form TetrisFrame
     */
    public TetrisFrame() {
        initComponents();
        rejilla = new Rejilla(12, 22);
        mueve = new Mueve(this, 2);
        nuevaFigura();
        mueve.reanudar();
    }
public String  getText() {
      String v = time.getText();
      time.setText("");
      return v;
   }
   public JTextField getTexField() {
      return this.time;
   }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rejillaPanel1 = new RejillaPanel(this);
        time = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        FileMenu = new javax.swing.JMenu();
        NewItem = new javax.swing.JMenuItem();
        ExitItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TetrisFrame.this.keyPressed(evt);
            }
        });

        rejillaPanel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                rejillaPanel1KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout rejillaPanel1Layout = new javax.swing.GroupLayout(rejillaPanel1);
        rejillaPanel1.setLayout(rejillaPanel1Layout);
        rejillaPanel1Layout.setHorizontalGroup(
            rejillaPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );
        rejillaPanel1Layout.setVerticalGroup(
            rejillaPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );

        FileMenu.setText("File");

        NewItem.setText("New");
        NewItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewItemActionPerformed(evt);
            }
        });
        FileMenu.add(NewItem);

        ExitItem.setText("Exit");
        ExitItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitItemActionPerformed(evt);
            }
        });
        FileMenu.add(ExitItem);

        jMenuBar1.add(FileMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(326, Short.MAX_VALUE)
                .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(rejillaPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(354, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(rejillaPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void keyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_keyPressed
        if ((evt.getKeyCode() == KeyEvent.VK_SPACE) && (aux == false)) {
            mueve.suspender();
            aux = true;
        } else if((evt.getKeyCode() == KeyEvent.VK_SPACE) && (aux == true)){
            mueve.reanudar();
            aux = false;
        }
    }//GEN-LAST:event_keyPressed

    private void ExitItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitItemActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_ExitItemActionPerformed

    private void NewItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewItemActionPerformed
        // TODO add your handling code here:
        inicializaJuego();
        mueve.reanudar();
    }//GEN-LAST:event_NewItemActionPerformed

    private void rejillaPanel1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rejillaPanel1KeyReleased
        if ((evt.getKeyCode() == KeyEvent.VK_SPACE) && (aux == false)) {
            mueve.suspender();
            aux = true;
        } else if((evt.getKeyCode() == KeyEvent.VK_SPACE) && (aux == true)){
            mueve.reanudar();
            aux = false;
        }
    }//GEN-LAST:event_rejillaPanel1KeyReleased

    /**
     * Obtiene una referencia a la Rejilla del juego
     *
     * @return una referencia a la rejilla del juego
     */
    public Rejilla getRejilla() {
        return rejilla;
    }

    
    /**
     * Obtiene una referencia a la Figura que cae actualmente en el juego
     *
     * @return una referencia a la figura actual
     */
    public Figura getFigura() {
        return figura;
    }

    /**
     * Obtiene una nueva figura cuyo tipo es seleccionado de forma aleatoria
     */
    public void nuevaFigura() {
        figura = Figura.nuevaFigura();
    }

    /**
     * Deja VACIA todas las celdas de la Rejilla, la inicializa de nuevo.
     * AdemÂ´as genera una nueva Figura de tipo aleatorio
     */
    public void inicializaJuego() {
        rejilla.initRejilla();
        nuevaFigura();
    }

    /**
     * Obtiene una referencia al panel donde se dibujan las piezas del juego
     *
     * @return una referencia al panel del juego
     */
    public RejillaPanel getPanel() {
        return rejillaPanel1;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TetrisFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TetrisFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TetrisFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TetrisFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TetrisFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem ExitItem;
    private javax.swing.JMenu FileMenu;
    private javax.swing.JMenuItem NewItem;
    private javax.swing.JMenuBar jMenuBar1;
    private guitetris.RejillaPanel rejillaPanel1;
    private javax.swing.JTextField time;
    // End of variables declaration//GEN-END:variables
}


